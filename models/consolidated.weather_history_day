-- define columns 
{% set columns = adapter.get_columns_in_relation(source('analytics_raw', 'weather_history_day')) %}

WITH converted_and_renamed AS (
    SELECT
        -- for all columns in the raw table
        {% for column in columns %}
            -- if they end with _F (fahrenheit)
            {% if column.name.endswith("_F") %}
                -- convert to Celsius, lower case the column name, and replace "_F" with "_c"
                ROUND(
                    (CAST("{{ column.name }}" AS FLOAT) - 32) * 5.0 / 9, 2
                ) AS "{{ column.name[:-2] | lower }}_c"
            -- else apply the same logic but for mph to kph conversion
            {% elif column.name.endswith("_MPH") %}
                ROUND(
                    CAST("{{ column.name }}" AS FLOAT) * 1.60934, 2
                ) AS "{{ column.name[:-4] | lower }}_kph"
            -- else just lower case the column
            {% else %} "{{ column.name }}" AS "{{ column.name | lower }}"
            {% endif %}
            -- if it's not the last iteration set a comma, if it's the last iteration end the loop
            {% if not loop.last %}, {% endif %}
        {% endfor %}
    FROM {{ source("analytics_raw", "weather_history_day") }}
)

SELECT 
    "postal_code",
    "country",
    "date_valid_std",
    "doy_std",
    "min_temperature_air_2m_c",
    "avg_temperature_air_2m_c",
    "max_temperature_air_2m_c",
    "min_temperature_wetbulb_2m_c",
    "avg_temperature_wetbulb_2m_c",
    "max_temperature_wetbulb_2m_c",
    "min_temperature_dewpoint_2m_c",
    "avg_temperature_dewpoint_2m_c",
    "max_temperature_dewpoint_2m_c",
    "min_temperature_feelslike_2m_c",
    "avg_temperature_feelslike_2m_c",
    "max_temperature_feelslike_2m_c",
    "min_temperature_windchill_2m_c",
    "avg_temperature_windchill_2m_c",
    "max_temperature_windchill_2m_c",
    "min_temperature_heatindex_2m_c",
    "avg_temperature_heatindex_2m_c",
    "max_temperature_heatindex_2m_c",
    "min_humidity_relative_2m_pct",
    "avg_humidity_relative_2m_pct",
    "max_humidity_relative_2m_pct",
    "min_humidity_specific_2m_gpkg",
    "avg_humidity_specific_2m_gpkg",
    "max_humidity_specific_2m_gpkg",
    "min_pressure_2m_mb",
    "avg_pressure_2m_mb",
    "max_pressure_2m_mb",
    "min_pressure_tendency_2m_mb",
    "avg_pressure_tendency_2m_mb",
    "max_pressure_tendency_2m_mb",
    "min_pressure_mean_sea_level_mb",
    "avg_pressure_mean_sea_level_mb",
    "max_pressure_mean_sea_level_mb",
    "min_wind_speed_10m_kph",
    "avg_wind_speed_10m_kph",
    "max_wind_speed_10m_kph",
    "avg_wind_direction_10m_deg",
    "min_wind_speed_80m_kph",
    "avg_wind_speed_80m_kph",
    "max_wind_speed_80m_kph",
    "avg_wind_direction_80m_deg",
    "min_wind_speed_100m_kph",
    "avg_wind_speed_100m_kph",
    "max_wind_speed_100m_kph",
    "avg_wind_direction_100m_deg",
    "tot_precipitation_in",
    "tot_snowfall_in",
    "tot_snowdepth_in",
    "min_cloud_cover_tot_pct",
    "avg_cloud_cover_tot_pct",
    "max_cloud_cover_tot_pct",
    "min_radiation_solar_total_wpm2",
    "avg_radiation_solar_total_wpm2",
    "max_radiation_solar_total_wpm2",
    "tot_radiation_solar_total_wpm2" 
FROM 
    converted_and_renamed
